- name: install shipping component
  hosts: mysql
  become: yes
  vars:
    mysql_password: RoboShop@1

  tasks:
    - name: install maven
      ansible.builtin.dnf:
        name: maven
        state: present

    - name: create roboshop user
      ansible.builtin.user:
        name: roboshop

    - name: recursively remove app directory
      ansible.builtin.file:
        path: /app
        state: absent

    - name: create app directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: download shipping app 
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
        dest: /tmp/catalogue.zip

    - name: extract shipping app
      ansible.builtin.unarchive:
        src: /tmp/shipping.zip
        dest: /app
        remote_src: yes

    - name: install dependencies
      ansible.builtin.command: mvn clean package
      args:
        chdir: /app
      
    - name: rename jar file
      ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
      args:
        chdir: /app

    - name: copy shipping service
      ansible.builtin.copy:
        src: shipping.service
        dest: /etc/systemd/system/shipping.service

    - name: daemon reload and start
     ansible.builtin.systemd_service:
      daemon_reload: true
    
    - name: install mysql client
      ansible.builtin.package: dnf install mysql -y

    - name: check cities schema exists or not
      ansible.builtin.command: mysql -h mysql.appalla.shop -uroot -p{{mysql_password}} 
      -sN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'cities'" 
      register: schema

    - name: print output
      ansible.builtin.debug:
        msg: "schema output: {{schema}}" 


    - name: load cities data
      ansible.builtin.command: mysql -h mysql.appalla.shop -uroot -pRoboShop@1 < /app/schema/shipping.sql 
      when: schema.stdout != "1" 


